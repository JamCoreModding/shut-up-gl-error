plugins {
    id "fabric-loom" version "1.3-SNAPSHOT" apply(false)
    id "net.minecraftforge.gradle" version "[6.0,6.2)" apply(false)
    id "org.spongepowered.gradle.vanilla" version "0.2.1-SNAPSHOT" apply(false)
    id "org.spongepowered.mixin" version "0.7-SNAPSHOT" apply(false)
    {{#if unified_publishing}}
    id "me.shedaniel.unified-publishing" version "0.1.+" apply(false)
    {{/if}}
    {{#if github_publish}}
    id "com.github.breadmoirai.github-release" version "2.4.1"
    {{/if}}
}
{{#if github_publish}}

if (System.getenv("GITHUB_TOKEN") != null) {
    githubRelease {
        token(System.getenv("GITHUB_TOKEN"))
        owner("{{ github_owner }}")
        repo("{{ github_repo }}")
        tagName(project.version)
        releaseName("V${project.version} [${minecraft_version}]")
        body(project.rootProject.file("CHANGELOG.md").text)
        draft(false)

        if (project.branch != null) {
            targetCommitish(project.branch)
        }
    }
}
{{/if}}

{{#ifCond github_publish '||' unified_publishing}}
tasks.create("publish") {
    {{#if github_publish}}
    dependsOn("githubRelease")
    {{/if}}
    {{#if unified_publishing}}
    dependsOn("fabric:publishUnified")
    dependsOn("forge:publishUnified")
    {{/if}}
}
{{/ifCond}}

subprojects {
    apply plugin: "java"

    java.toolchain.languageVersion = JavaLanguageVersion.of(17)
    java.withSourcesJar()

    jar {
        from(rootProject.file("LICENSE")) {
            rename { "${it}_${mod_name}" }
        }

        manifest {
            attributes([
                    'Specification-Title'     : mod_name,
                    'Specification-Version'   : project.jar.archiveVersion,
                    'Implementation-Title'    : project.name,
                    'Implementation-Version'  : project.jar.archiveVersion,
                    'Built-On-Java'           : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
                    'Built-On-Minecraft'      : minecraft_version
            ])
        }
    }

    sourcesJar {
        from(rootProject.file("LICENSE")) {
            rename { "${it}_${mod_name}" }
        }
    }

    repositories {
        mavenCentral()

        maven {
            name = "Sponge / Mixin"
            url = "https://repo.spongepowered.org/repository/maven-public/"
        }

        maven {
            name = "Modrinth Maven"
            url = "https://api.modrinth.com/maven"
        }
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.encoding = "UTF-8"
        it.options.getRelease().set(17)
    }

    processResources {
        filesMatching(["pack.mcmeta", "fabric.mod.json", "mods.toml", "*.mixins.json"]) {
            expand project.properties
        }
    }

    tasks.withType(GenerateModuleMetadata).configureEach {
        enabled = false
    }
}
